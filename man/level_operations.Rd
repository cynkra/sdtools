% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/level_operations.R
\name{level_operations}
\alias{level_operations}
\alias{level_drop}
\alias{level_rename}
\title{Swissdata Dimension Level Operations}
\usage{
level_drop(x, dim, level)

level_rename(x, dim, level, name)
}
\arguments{
\item{x}{swissdata object}

\item{dim}{dimension name}

\item{level}{single level ID from \code{dim}}

\item{name}{new level name}
}
\value{
a modified swissdata object
}
\description{
A set of functions for manipulating dimension levels of swissdata objects.
}
\details{
\code{level_drop} removes a level, \code{level_rename} renames an existing level.

Internally these functions incorporate the requested changes into a given
swissdata object by altering the \code{x$data}, \code{x$meta$hierarchy},
\code{x$meta$labels}, and \code{x$meta$units} fields.

When removing the dimension level using \code{level_drop} the corresponding rows
from \code{x$data} are removed.
}
\examples{

# rename the existing level "ins" to "new" in dimension "idx_type"
z <- adecco
z <- level_rename(z, dim = "idx_type", level = "ins", name = "new")
z$data
z$meta$labels$idx_type$new
z$meta$hierarchy$idx_type

# drop existing level "new" from dimension "idx_type"
z <- level_drop(z, dim = "idx_type", level = "new")
z$data
z$meta$labels$idx_type$new
z$meta$hierarchy$idx_type

}
\author{
Christoph Sax
}
